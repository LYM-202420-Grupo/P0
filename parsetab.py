
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COLON COMMA DO DROP DROP_CHIP ELSE EQUALS EXEC FI GOTO GRAB GRAB_BALLOON ID IF IS_BLOCKED IS_FACING JUMP LBRACE LET_GO LPAREN MACRO MOVE MOVES NEW NEW_MACRO NEW_VAR NOP NOT NUMBER OD PICK PICKUP_CHIP PLACE_BALLOON PLUS POP POP_BALLOON QUESTION RBRACE REP RPAREN SAFE_EXE SEMICOLON THEN TIMES TURN_RIGHT TURN_TO_MY TURN_TO_THE VAR WALK ZEROprogram : EXEC blockprogram : NEW VAR ID ASSIGN NUMBERprogram : NEW MACRO ID LPAREN param_list RPAREN blockblock : LBRACE stmt_list RBRACEstmt_list : stmt SEMICOLON stmt_list\n                 | stmt SEMICOLONstmt : IF condition THEN block ELSE block FI\n            | WALK LPAREN NUMBER RPAREN\n            | DROP LPAREN NUMBER RPAREN\n            | TURN_TO_MY LPAREN ID RPAREN\n            | SAFE_EXE LPAREN stmt RPAREN\n            | ID LPAREN param_list RPAREN\n            | NOPparam_list : ID COMMA param_list\n                  | ID\n                  | emptycondition : NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN\n                 | NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN\n                 | IS_BLOCKED LPAREN ID RPAREN\n                 | ZERO QUESTION LPAREN ID RPAREN\n                 | IS_FACING LPAREN ID RPARENempty :'
    
_lr_action_items = {'EXEC':([0,],[2,]),'NEW':([0,],[3,]),'$end':([1,4,19,46,68,],[0,-1,-4,-2,-3,]),'LBRACE':([2,34,60,61,],[5,5,5,5,]),'VAR':([3,],[6,]),'MACRO':([3,],[7,]),'IF':([5,20,30,],[10,10,10,]),'WALK':([5,20,30,],[11,11,11,]),'DROP':([5,20,30,],[12,12,12,]),'TURN_TO_MY':([5,20,30,],[13,13,13,]),'SAFE_EXE':([5,20,30,],[15,15,15,]),'ID':([5,6,7,20,28,29,30,32,36,38,52,57,62,71,],[14,17,18,14,41,42,14,42,51,53,65,42,70,75,]),'NOP':([5,20,30,],[16,16,16,]),'RBRACE':([8,20,33,],[19,-6,-5,]),'SEMICOLON':([9,16,54,55,56,58,59,73,],[20,-13,-8,-9,-10,-12,-11,-7,]),'NOT':([10,],[22,]),'IS_BLOCKED':([10,35,],[23,49,]),'ZERO':([10,35,],[24,50,]),'IS_FACING':([10,],[25,]),'LPAREN':([11,12,13,14,15,18,22,23,25,37,49,63,],[26,27,28,29,30,32,35,36,38,52,62,71,]),'RPAREN':([16,29,32,39,40,41,42,43,44,45,47,51,53,54,55,56,57,58,59,65,67,70,73,74,75,77,],[-13,-22,-22,54,55,56,-15,58,-16,59,60,64,66,-8,-9,-10,-22,-12,-11,72,-14,74,-7,76,77,78,]),'ASSIGN':([17,],[31,]),'ELSE':([19,48,],[-4,61,]),'FI':([19,69,],[-4,73,]),'THEN':([21,64,66,72,76,78,],[34,-19,-21,-20,-17,-18,]),'QUESTION':([24,50,],[37,63,]),'NUMBER':([26,27,31,],[39,40,46,]),'COMMA':([42,],[57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([2,34,60,61,],[4,48,68,69,]),'stmt_list':([5,20,],[8,33,]),'stmt':([5,20,30,],[9,9,45,]),'condition':([10,],[21,]),'param_list':([29,32,57,],[43,47,67,]),'empty':([29,32,57,],[44,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> EXEC block','program',2,'p_program_exec','analizador_lexico.py',68),
  ('program -> NEW VAR ID ASSIGN NUMBER','program',5,'p_program_new_var','analizador_lexico.py',72),
  ('program -> NEW MACRO ID LPAREN param_list RPAREN block','program',7,'p_program_new_macro','analizador_lexico.py',76),
  ('block -> LBRACE stmt_list RBRACE','block',3,'p_block','analizador_lexico.py',80),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','analizador_lexico.py',84),
  ('stmt_list -> stmt SEMICOLON','stmt_list',2,'p_stmt_list','analizador_lexico.py',85),
  ('stmt -> IF condition THEN block ELSE block FI','stmt',7,'p_stmt','analizador_lexico.py',89),
  ('stmt -> WALK LPAREN NUMBER RPAREN','stmt',4,'p_stmt','analizador_lexico.py',90),
  ('stmt -> DROP LPAREN NUMBER RPAREN','stmt',4,'p_stmt','analizador_lexico.py',91),
  ('stmt -> TURN_TO_MY LPAREN ID RPAREN','stmt',4,'p_stmt','analizador_lexico.py',92),
  ('stmt -> SAFE_EXE LPAREN stmt RPAREN','stmt',4,'p_stmt','analizador_lexico.py',93),
  ('stmt -> ID LPAREN param_list RPAREN','stmt',4,'p_stmt','analizador_lexico.py',94),
  ('stmt -> NOP','stmt',1,'p_stmt','analizador_lexico.py',95),
  ('param_list -> ID COMMA param_list','param_list',3,'p_param_list','analizador_lexico.py',99),
  ('param_list -> ID','param_list',1,'p_param_list','analizador_lexico.py',100),
  ('param_list -> empty','param_list',1,'p_param_list','analizador_lexico.py',101),
  ('condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN','condition',7,'p_condition','analizador_lexico.py',105),
  ('condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN','condition',8,'p_condition','analizador_lexico.py',106),
  ('condition -> IS_BLOCKED LPAREN ID RPAREN','condition',4,'p_condition','analizador_lexico.py',107),
  ('condition -> ZERO QUESTION LPAREN ID RPAREN','condition',5,'p_condition','analizador_lexico.py',108),
  ('condition -> IS_FACING LPAREN ID RPAREN','condition',4,'p_condition','analizador_lexico.py',109),
  ('empty -> <empty>','empty',0,'p_empty','analizador_lexico.py',113),
]
