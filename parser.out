Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEW_MACRO
    NEW_VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> EXEC block
Rule 2     program -> NEW VAR ID ASSIGN NUMBER SEMICOLON
Rule 3     program -> NEW MACRO ID LPAREN param_list RPAREN block SEMICOLON
Rule 4     block -> LBRACE stmt_list RBRACE
Rule 5     condition -> BLOCKED
Rule 6     direction1 -> LEFT
Rule 7     direction1 -> RIGHT
Rule 8     direction1 -> FORWARD
Rule 9     direction1 -> BACK
Rule 10    direction2 -> NORTH
Rule 11    direction2 -> SOUTH
Rule 12    direction2 -> EAST
Rule 13    direction2 -> WEST
Rule 14    stmt_list -> stmt SEMICOLON stmt_list
Rule 15    stmt_list -> stmt SEMICOLON
Rule 16    stmt -> IF condition THEN block ELSE block FI
Rule 17    stmt -> WALK LPAREN NUMBER RPAREN
Rule 18    stmt -> JUMP LPAREN NUMBER RPAREN
Rule 19    stmt -> DROP LPAREN NUMBER RPAREN
Rule 20    stmt -> MOVE LPAREN NUMBER RPAREN
Rule 21    stmt -> LET_GO LPAREN NUMBER RPAREN
Rule 22    stmt -> POP LPAREN NUMBER RPAREN
Rule 23    stmt -> TURN_TO_MY LPAREN direction1 RPAREN
Rule 24    stmt -> GRAB LPAREN ID RPAREN
Rule 25    stmt -> SAFE_EXE LPAREN stmt RPAREN
Rule 26    stmt -> MOVES LPAREN param_list RPAREN
Rule 27    stmt -> ID LPAREN param_list RPAREN
Rule 28    stmt -> REP NUMBER TIMES block
Rule 29    stmt -> NOP
Rule 30    stmt -> TURN_RIGHT LPAREN ID RPAREN
Rule 31    stmt -> TURN_TO_THE LPAREN direction2 RPAREN
Rule 32    stmt -> PICK LPAREN ID RPAREN
Rule 33    stmt -> GOTO LPAREN ID RPAREN
Rule 34    stmt -> DROP_CHIP LPAREN NUMBER RPAREN
Rule 35    stmt -> PLACE_BALLOON LPAREN NUMBER RPAREN
Rule 36    stmt -> GRAB_BALLOON LPAREN NUMBER RPAREN
Rule 37    stmt -> PICKUP_CHIP LPAREN NUMBER RPAREN
Rule 38    stmt -> POP_BALLOON LPAREN NUMBER RPAREN
Rule 39    stmt -> WHILE condition DO block OD
Rule 40    param_list -> ID COMMA param_list
Rule 41    param_list -> ID
Rule 42    param_list -> empty
Rule 43    stmt -> ID LPAREN param_list RPAREN SEMICOLON
Rule 44    condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN
Rule 45    condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN
Rule 46    condition -> IS_BLOCKED LPAREN ID RPAREN
Rule 47    condition -> ZERO QUESTION LPAREN ID RPAREN
Rule 48    condition -> IS_FACING LPAREN ID RPAREN
Rule 49    condition -> SIZE
Rule 50    condition -> MYX
Rule 51    condition -> MYY
Rule 52    condition -> MYCHIPS
Rule 53    condition -> MYBALLOONS
Rule 54    condition -> BALLOONSHERE
Rule 55    condition -> CHIPSHERE
Rule 56    condition -> ROOMFORCHIPS
Rule 57    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 2
BACK                 : 9
BALLOONSHERE         : 54
BLOCKED              : 5
CHIPSHERE            : 55
COMMA                : 40
DO                   : 39
DROP                 : 19
DROP_CHIP            : 34
EAST                 : 12
ELSE                 : 16
EXEC                 : 1
FI                   : 16
FORWARD              : 8
GOTO                 : 33
GRAB                 : 24
GRAB_BALLOON         : 36
ID                   : 2 3 24 27 30 32 33 40 41 43 44 45 46 47 48
IF                   : 16
IS_BLOCKED           : 44 46
IS_FACING            : 48
JUMP                 : 18
LBRACE               : 4
LEFT                 : 6
LET_GO               : 21
LPAREN               : 3 17 18 19 20 21 22 23 24 25 26 27 30 31 32 33 34 35 36 37 38 43 44 44 45 45 46 47 48
MACRO                : 3
MOVE                 : 20
MOVES                : 26
MYBALLOONS           : 53
MYCHIPS              : 52
MYX                  : 50
MYY                  : 51
NEW                  : 2 3
NEW_MACRO            : 
NEW_VAR              : 
NOP                  : 29
NORTH                : 10
NOT                  : 44 45
NUMBER               : 2 17 18 19 20 21 22 28 34 35 36 37 38
OD                   : 39
PICK                 : 32
PICKUP_CHIP          : 37
PLACE_BALLOON        : 35
POP                  : 22
POP_BALLOON          : 38
QUESTION             : 45 47
RBRACE               : 4
REP                  : 28
RIGHT                : 7
ROOMFORCHIPS         : 56
RPAREN               : 3 17 18 19 20 21 22 23 24 25 26 27 30 31 32 33 34 35 36 37 38 43 44 44 45 45 46 47 48
SAFE_EXE             : 25
SEMICOLON            : 2 3 14 15 43
SIZE                 : 49
SOUTH                : 11
THEN                 : 16
TIMES                : 28
TURN_RIGHT           : 30
TURN_TO_MY           : 23
TURN_TO_THE          : 31
VAR                  : 2
WALK                 : 17
WEST                 : 13
WHILE                : 39
ZERO                 : 45 47
error                : 

Nonterminals, with rules where they appear

block                : 1 3 16 16 28 39
condition            : 16 39
direction1           : 23
direction2           : 31
empty                : 42
param_list           : 3 26 27 40 43
program              : 0
stmt                 : 14 15 25
stmt_list            : 4 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . EXEC block
    (2) program -> . NEW VAR ID ASSIGN NUMBER SEMICOLON
    (3) program -> . NEW MACRO ID LPAREN param_list RPAREN block SEMICOLON

    EXEC            shift and go to state 2
    NEW             shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> EXEC . block
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 4

state 3

    (2) program -> NEW . VAR ID ASSIGN NUMBER SEMICOLON
    (3) program -> NEW . MACRO ID LPAREN param_list RPAREN block SEMICOLON

    VAR             shift and go to state 6
    MACRO           shift and go to state 7


state 4

    (1) program -> EXEC block .

    $end            reduce using rule 1 (program -> EXEC block .)


state 5

    (4) block -> LBRACE . stmt_list RBRACE
    (14) stmt_list -> . stmt SEMICOLON stmt_list
    (15) stmt_list -> . stmt SEMICOLON
    (16) stmt -> . IF condition THEN block ELSE block FI
    (17) stmt -> . WALK LPAREN NUMBER RPAREN
    (18) stmt -> . JUMP LPAREN NUMBER RPAREN
    (19) stmt -> . DROP LPAREN NUMBER RPAREN
    (20) stmt -> . MOVE LPAREN NUMBER RPAREN
    (21) stmt -> . LET_GO LPAREN NUMBER RPAREN
    (22) stmt -> . POP LPAREN NUMBER RPAREN
    (23) stmt -> . TURN_TO_MY LPAREN direction1 RPAREN
    (24) stmt -> . GRAB LPAREN ID RPAREN
    (25) stmt -> . SAFE_EXE LPAREN stmt RPAREN
    (26) stmt -> . MOVES LPAREN param_list RPAREN
    (27) stmt -> . ID LPAREN param_list RPAREN
    (28) stmt -> . REP NUMBER TIMES block
    (29) stmt -> . NOP
    (30) stmt -> . TURN_RIGHT LPAREN ID RPAREN
    (31) stmt -> . TURN_TO_THE LPAREN direction2 RPAREN
    (32) stmt -> . PICK LPAREN ID RPAREN
    (33) stmt -> . GOTO LPAREN ID RPAREN
    (34) stmt -> . DROP_CHIP LPAREN NUMBER RPAREN
    (35) stmt -> . PLACE_BALLOON LPAREN NUMBER RPAREN
    (36) stmt -> . GRAB_BALLOON LPAREN NUMBER RPAREN
    (37) stmt -> . PICKUP_CHIP LPAREN NUMBER RPAREN
    (38) stmt -> . POP_BALLOON LPAREN NUMBER RPAREN
    (39) stmt -> . WHILE condition DO block OD
    (43) stmt -> . ID LPAREN param_list RPAREN SEMICOLON

    IF              shift and go to state 10
    WALK            shift and go to state 11
    JUMP            shift and go to state 12
    DROP            shift and go to state 13
    MOVE            shift and go to state 14
    LET_GO          shift and go to state 15
    POP             shift and go to state 16
    TURN_TO_MY      shift and go to state 17
    GRAB            shift and go to state 18
    SAFE_EXE        shift and go to state 20
    MOVES           shift and go to state 21
    ID              shift and go to state 19
    REP             shift and go to state 22
    NOP             shift and go to state 23
    TURN_RIGHT      shift and go to state 24
    TURN_TO_THE     shift and go to state 25
    PICK            shift and go to state 26
    GOTO            shift and go to state 27
    DROP_CHIP       shift and go to state 28
    PLACE_BALLOON   shift and go to state 29
    GRAB_BALLOON    shift and go to state 30
    PICKUP_CHIP     shift and go to state 31
    POP_BALLOON     shift and go to state 32
    WHILE           shift and go to state 33

    stmt_list                      shift and go to state 8
    stmt                           shift and go to state 9

state 6

    (2) program -> NEW VAR . ID ASSIGN NUMBER SEMICOLON

    ID              shift and go to state 34


state 7

    (3) program -> NEW MACRO . ID LPAREN param_list RPAREN block SEMICOLON

    ID              shift and go to state 35


state 8

    (4) block -> LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 36


state 9

    (14) stmt_list -> stmt . SEMICOLON stmt_list
    (15) stmt_list -> stmt . SEMICOLON

    SEMICOLON       shift and go to state 37


state 10

    (16) stmt -> IF . condition THEN block ELSE block FI
    (5) condition -> . BLOCKED
    (44) condition -> . NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN
    (45) condition -> . NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN
    (46) condition -> . IS_BLOCKED LPAREN ID RPAREN
    (47) condition -> . ZERO QUESTION LPAREN ID RPAREN
    (48) condition -> . IS_FACING LPAREN ID RPAREN
    (49) condition -> . SIZE
    (50) condition -> . MYX
    (51) condition -> . MYY
    (52) condition -> . MYCHIPS
    (53) condition -> . MYBALLOONS
    (54) condition -> . BALLOONSHERE
    (55) condition -> . CHIPSHERE
    (56) condition -> . ROOMFORCHIPS

    BLOCKED         shift and go to state 39
    NOT             shift and go to state 40
    IS_BLOCKED      shift and go to state 41
    ZERO            shift and go to state 42
    IS_FACING       shift and go to state 43
    SIZE            shift and go to state 44
    MYX             shift and go to state 45
    MYY             shift and go to state 46
    MYCHIPS         shift and go to state 47
    MYBALLOONS      shift and go to state 48
    BALLOONSHERE    shift and go to state 49
    CHIPSHERE       shift and go to state 50
    ROOMFORCHIPS    shift and go to state 51

    condition                      shift and go to state 38

state 11

    (17) stmt -> WALK . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 52


state 12

    (18) stmt -> JUMP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 53


state 13

    (19) stmt -> DROP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 54


state 14

    (20) stmt -> MOVE . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 55


state 15

    (21) stmt -> LET_GO . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 56


state 16

    (22) stmt -> POP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 57


state 17

    (23) stmt -> TURN_TO_MY . LPAREN direction1 RPAREN

    LPAREN          shift and go to state 58


state 18

    (24) stmt -> GRAB . LPAREN ID RPAREN

    LPAREN          shift and go to state 59


state 19

    (27) stmt -> ID . LPAREN param_list RPAREN
    (43) stmt -> ID . LPAREN param_list RPAREN SEMICOLON

    LPAREN          shift and go to state 60


state 20

    (25) stmt -> SAFE_EXE . LPAREN stmt RPAREN

    LPAREN          shift and go to state 61


state 21

    (26) stmt -> MOVES . LPAREN param_list RPAREN

    LPAREN          shift and go to state 62


state 22

    (28) stmt -> REP . NUMBER TIMES block

    NUMBER          shift and go to state 63


state 23

    (29) stmt -> NOP .

    SEMICOLON       reduce using rule 29 (stmt -> NOP .)
    RPAREN          reduce using rule 29 (stmt -> NOP .)


state 24

    (30) stmt -> TURN_RIGHT . LPAREN ID RPAREN

    LPAREN          shift and go to state 64


state 25

    (31) stmt -> TURN_TO_THE . LPAREN direction2 RPAREN

    LPAREN          shift and go to state 65


state 26

    (32) stmt -> PICK . LPAREN ID RPAREN

    LPAREN          shift and go to state 66


state 27

    (33) stmt -> GOTO . LPAREN ID RPAREN

    LPAREN          shift and go to state 67


state 28

    (34) stmt -> DROP_CHIP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 68


state 29

    (35) stmt -> PLACE_BALLOON . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 69


state 30

    (36) stmt -> GRAB_BALLOON . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 70


state 31

    (37) stmt -> PICKUP_CHIP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 71


state 32

    (38) stmt -> POP_BALLOON . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 72


state 33

    (39) stmt -> WHILE . condition DO block OD
    (5) condition -> . BLOCKED
    (44) condition -> . NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN
    (45) condition -> . NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN
    (46) condition -> . IS_BLOCKED LPAREN ID RPAREN
    (47) condition -> . ZERO QUESTION LPAREN ID RPAREN
    (48) condition -> . IS_FACING LPAREN ID RPAREN
    (49) condition -> . SIZE
    (50) condition -> . MYX
    (51) condition -> . MYY
    (52) condition -> . MYCHIPS
    (53) condition -> . MYBALLOONS
    (54) condition -> . BALLOONSHERE
    (55) condition -> . CHIPSHERE
    (56) condition -> . ROOMFORCHIPS

    BLOCKED         shift and go to state 39
    NOT             shift and go to state 40
    IS_BLOCKED      shift and go to state 41
    ZERO            shift and go to state 42
    IS_FACING       shift and go to state 43
    SIZE            shift and go to state 44
    MYX             shift and go to state 45
    MYY             shift and go to state 46
    MYCHIPS         shift and go to state 47
    MYBALLOONS      shift and go to state 48
    BALLOONSHERE    shift and go to state 49
    CHIPSHERE       shift and go to state 50
    ROOMFORCHIPS    shift and go to state 51

    condition                      shift and go to state 73

state 34

    (2) program -> NEW VAR ID . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 74


state 35

    (3) program -> NEW MACRO ID . LPAREN param_list RPAREN block SEMICOLON

    LPAREN          shift and go to state 75


state 36

    (4) block -> LBRACE stmt_list RBRACE .

    $end            reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)
    ELSE            reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)
    SEMICOLON       reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)
    RPAREN          reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)
    OD              reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)
    FI              reduce using rule 4 (block -> LBRACE stmt_list RBRACE .)


state 37

    (14) stmt_list -> stmt SEMICOLON . stmt_list
    (15) stmt_list -> stmt SEMICOLON .
    (14) stmt_list -> . stmt SEMICOLON stmt_list
    (15) stmt_list -> . stmt SEMICOLON
    (16) stmt -> . IF condition THEN block ELSE block FI
    (17) stmt -> . WALK LPAREN NUMBER RPAREN
    (18) stmt -> . JUMP LPAREN NUMBER RPAREN
    (19) stmt -> . DROP LPAREN NUMBER RPAREN
    (20) stmt -> . MOVE LPAREN NUMBER RPAREN
    (21) stmt -> . LET_GO LPAREN NUMBER RPAREN
    (22) stmt -> . POP LPAREN NUMBER RPAREN
    (23) stmt -> . TURN_TO_MY LPAREN direction1 RPAREN
    (24) stmt -> . GRAB LPAREN ID RPAREN
    (25) stmt -> . SAFE_EXE LPAREN stmt RPAREN
    (26) stmt -> . MOVES LPAREN param_list RPAREN
    (27) stmt -> . ID LPAREN param_list RPAREN
    (28) stmt -> . REP NUMBER TIMES block
    (29) stmt -> . NOP
    (30) stmt -> . TURN_RIGHT LPAREN ID RPAREN
    (31) stmt -> . TURN_TO_THE LPAREN direction2 RPAREN
    (32) stmt -> . PICK LPAREN ID RPAREN
    (33) stmt -> . GOTO LPAREN ID RPAREN
    (34) stmt -> . DROP_CHIP LPAREN NUMBER RPAREN
    (35) stmt -> . PLACE_BALLOON LPAREN NUMBER RPAREN
    (36) stmt -> . GRAB_BALLOON LPAREN NUMBER RPAREN
    (37) stmt -> . PICKUP_CHIP LPAREN NUMBER RPAREN
    (38) stmt -> . POP_BALLOON LPAREN NUMBER RPAREN
    (39) stmt -> . WHILE condition DO block OD
    (43) stmt -> . ID LPAREN param_list RPAREN SEMICOLON

    RBRACE          reduce using rule 15 (stmt_list -> stmt SEMICOLON .)
    IF              shift and go to state 10
    WALK            shift and go to state 11
    JUMP            shift and go to state 12
    DROP            shift and go to state 13
    MOVE            shift and go to state 14
    LET_GO          shift and go to state 15
    POP             shift and go to state 16
    TURN_TO_MY      shift and go to state 17
    GRAB            shift and go to state 18
    SAFE_EXE        shift and go to state 20
    MOVES           shift and go to state 21
    ID              shift and go to state 19
    REP             shift and go to state 22
    NOP             shift and go to state 23
    TURN_RIGHT      shift and go to state 24
    TURN_TO_THE     shift and go to state 25
    PICK            shift and go to state 26
    GOTO            shift and go to state 27
    DROP_CHIP       shift and go to state 28
    PLACE_BALLOON   shift and go to state 29
    GRAB_BALLOON    shift and go to state 30
    PICKUP_CHIP     shift and go to state 31
    POP_BALLOON     shift and go to state 32
    WHILE           shift and go to state 33

    stmt                           shift and go to state 9
    stmt_list                      shift and go to state 76

state 38

    (16) stmt -> IF condition . THEN block ELSE block FI

    THEN            shift and go to state 77


state 39

    (5) condition -> BLOCKED .

    THEN            reduce using rule 5 (condition -> BLOCKED .)
    DO              reduce using rule 5 (condition -> BLOCKED .)


state 40

    (44) condition -> NOT . LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN
    (45) condition -> NOT . LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN

    LPAREN          shift and go to state 78


state 41

    (46) condition -> IS_BLOCKED . LPAREN ID RPAREN

    LPAREN          shift and go to state 79


state 42

    (47) condition -> ZERO . QUESTION LPAREN ID RPAREN

    QUESTION        shift and go to state 80


state 43

    (48) condition -> IS_FACING . LPAREN ID RPAREN

    LPAREN          shift and go to state 81


state 44

    (49) condition -> SIZE .

    THEN            reduce using rule 49 (condition -> SIZE .)
    DO              reduce using rule 49 (condition -> SIZE .)


state 45

    (50) condition -> MYX .

    THEN            reduce using rule 50 (condition -> MYX .)
    DO              reduce using rule 50 (condition -> MYX .)


state 46

    (51) condition -> MYY .

    THEN            reduce using rule 51 (condition -> MYY .)
    DO              reduce using rule 51 (condition -> MYY .)


state 47

    (52) condition -> MYCHIPS .

    THEN            reduce using rule 52 (condition -> MYCHIPS .)
    DO              reduce using rule 52 (condition -> MYCHIPS .)


state 48

    (53) condition -> MYBALLOONS .

    THEN            reduce using rule 53 (condition -> MYBALLOONS .)
    DO              reduce using rule 53 (condition -> MYBALLOONS .)


state 49

    (54) condition -> BALLOONSHERE .

    THEN            reduce using rule 54 (condition -> BALLOONSHERE .)
    DO              reduce using rule 54 (condition -> BALLOONSHERE .)


state 50

    (55) condition -> CHIPSHERE .

    THEN            reduce using rule 55 (condition -> CHIPSHERE .)
    DO              reduce using rule 55 (condition -> CHIPSHERE .)


state 51

    (56) condition -> ROOMFORCHIPS .

    THEN            reduce using rule 56 (condition -> ROOMFORCHIPS .)
    DO              reduce using rule 56 (condition -> ROOMFORCHIPS .)


state 52

    (17) stmt -> WALK LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 82


state 53

    (18) stmt -> JUMP LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 83


state 54

    (19) stmt -> DROP LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 84


state 55

    (20) stmt -> MOVE LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 85


state 56

    (21) stmt -> LET_GO LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 86


state 57

    (22) stmt -> POP LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 87


state 58

    (23) stmt -> TURN_TO_MY LPAREN . direction1 RPAREN
    (6) direction1 -> . LEFT
    (7) direction1 -> . RIGHT
    (8) direction1 -> . FORWARD
    (9) direction1 -> . BACK

    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    FORWARD         shift and go to state 91
    BACK            shift and go to state 92

    direction1                     shift and go to state 88

state 59

    (24) stmt -> GRAB LPAREN . ID RPAREN

    ID              shift and go to state 93


state 60

    (27) stmt -> ID LPAREN . param_list RPAREN
    (43) stmt -> ID LPAREN . param_list RPAREN SEMICOLON
    (40) param_list -> . ID COMMA param_list
    (41) param_list -> . ID
    (42) param_list -> . empty
    (57) empty -> .

    ID              shift and go to state 94
    RPAREN          reduce using rule 57 (empty -> .)

    param_list                     shift and go to state 95
    empty                          shift and go to state 96

state 61

    (25) stmt -> SAFE_EXE LPAREN . stmt RPAREN
    (16) stmt -> . IF condition THEN block ELSE block FI
    (17) stmt -> . WALK LPAREN NUMBER RPAREN
    (18) stmt -> . JUMP LPAREN NUMBER RPAREN
    (19) stmt -> . DROP LPAREN NUMBER RPAREN
    (20) stmt -> . MOVE LPAREN NUMBER RPAREN
    (21) stmt -> . LET_GO LPAREN NUMBER RPAREN
    (22) stmt -> . POP LPAREN NUMBER RPAREN
    (23) stmt -> . TURN_TO_MY LPAREN direction1 RPAREN
    (24) stmt -> . GRAB LPAREN ID RPAREN
    (25) stmt -> . SAFE_EXE LPAREN stmt RPAREN
    (26) stmt -> . MOVES LPAREN param_list RPAREN
    (27) stmt -> . ID LPAREN param_list RPAREN
    (28) stmt -> . REP NUMBER TIMES block
    (29) stmt -> . NOP
    (30) stmt -> . TURN_RIGHT LPAREN ID RPAREN
    (31) stmt -> . TURN_TO_THE LPAREN direction2 RPAREN
    (32) stmt -> . PICK LPAREN ID RPAREN
    (33) stmt -> . GOTO LPAREN ID RPAREN
    (34) stmt -> . DROP_CHIP LPAREN NUMBER RPAREN
    (35) stmt -> . PLACE_BALLOON LPAREN NUMBER RPAREN
    (36) stmt -> . GRAB_BALLOON LPAREN NUMBER RPAREN
    (37) stmt -> . PICKUP_CHIP LPAREN NUMBER RPAREN
    (38) stmt -> . POP_BALLOON LPAREN NUMBER RPAREN
    (39) stmt -> . WHILE condition DO block OD
    (43) stmt -> . ID LPAREN param_list RPAREN SEMICOLON

    IF              shift and go to state 10
    WALK            shift and go to state 11
    JUMP            shift and go to state 12
    DROP            shift and go to state 13
    MOVE            shift and go to state 14
    LET_GO          shift and go to state 15
    POP             shift and go to state 16
    TURN_TO_MY      shift and go to state 17
    GRAB            shift and go to state 18
    SAFE_EXE        shift and go to state 20
    MOVES           shift and go to state 21
    ID              shift and go to state 19
    REP             shift and go to state 22
    NOP             shift and go to state 23
    TURN_RIGHT      shift and go to state 24
    TURN_TO_THE     shift and go to state 25
    PICK            shift and go to state 26
    GOTO            shift and go to state 27
    DROP_CHIP       shift and go to state 28
    PLACE_BALLOON   shift and go to state 29
    GRAB_BALLOON    shift and go to state 30
    PICKUP_CHIP     shift and go to state 31
    POP_BALLOON     shift and go to state 32
    WHILE           shift and go to state 33

    stmt                           shift and go to state 97

state 62

    (26) stmt -> MOVES LPAREN . param_list RPAREN
    (40) param_list -> . ID COMMA param_list
    (41) param_list -> . ID
    (42) param_list -> . empty
    (57) empty -> .

    ID              shift and go to state 94
    RPAREN          reduce using rule 57 (empty -> .)

    param_list                     shift and go to state 98
    empty                          shift and go to state 96

state 63

    (28) stmt -> REP NUMBER . TIMES block

    TIMES           shift and go to state 99


state 64

    (30) stmt -> TURN_RIGHT LPAREN . ID RPAREN

    ID              shift and go to state 100


state 65

    (31) stmt -> TURN_TO_THE LPAREN . direction2 RPAREN
    (10) direction2 -> . NORTH
    (11) direction2 -> . SOUTH
    (12) direction2 -> . EAST
    (13) direction2 -> . WEST

    NORTH           shift and go to state 102
    SOUTH           shift and go to state 103
    EAST            shift and go to state 104
    WEST            shift and go to state 105

    direction2                     shift and go to state 101

state 66

    (32) stmt -> PICK LPAREN . ID RPAREN

    ID              shift and go to state 106


state 67

    (33) stmt -> GOTO LPAREN . ID RPAREN

    ID              shift and go to state 107


state 68

    (34) stmt -> DROP_CHIP LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 108


state 69

    (35) stmt -> PLACE_BALLOON LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 109


state 70

    (36) stmt -> GRAB_BALLOON LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 110


state 71

    (37) stmt -> PICKUP_CHIP LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 111


state 72

    (38) stmt -> POP_BALLOON LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 112


state 73

    (39) stmt -> WHILE condition . DO block OD

    DO              shift and go to state 113


state 74

    (2) program -> NEW VAR ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 114


state 75

    (3) program -> NEW MACRO ID LPAREN . param_list RPAREN block SEMICOLON
    (40) param_list -> . ID COMMA param_list
    (41) param_list -> . ID
    (42) param_list -> . empty
    (57) empty -> .

    ID              shift and go to state 94
    RPAREN          reduce using rule 57 (empty -> .)

    param_list                     shift and go to state 115
    empty                          shift and go to state 96

state 76

    (14) stmt_list -> stmt SEMICOLON stmt_list .

    RBRACE          reduce using rule 14 (stmt_list -> stmt SEMICOLON stmt_list .)


state 77

    (16) stmt -> IF condition THEN . block ELSE block FI
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 116

state 78

    (44) condition -> NOT LPAREN . IS_BLOCKED LPAREN ID RPAREN RPAREN
    (45) condition -> NOT LPAREN . ZERO QUESTION LPAREN ID RPAREN RPAREN

    IS_BLOCKED      shift and go to state 117
    ZERO            shift and go to state 118


state 79

    (46) condition -> IS_BLOCKED LPAREN . ID RPAREN

    ID              shift and go to state 119


state 80

    (47) condition -> ZERO QUESTION . LPAREN ID RPAREN

    LPAREN          shift and go to state 120


state 81

    (48) condition -> IS_FACING LPAREN . ID RPAREN

    ID              shift and go to state 121


state 82

    (17) stmt -> WALK LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 122


state 83

    (18) stmt -> JUMP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 123


state 84

    (19) stmt -> DROP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 124


state 85

    (20) stmt -> MOVE LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 125


state 86

    (21) stmt -> LET_GO LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 126


state 87

    (22) stmt -> POP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 127


state 88

    (23) stmt -> TURN_TO_MY LPAREN direction1 . RPAREN

    RPAREN          shift and go to state 128


state 89

    (6) direction1 -> LEFT .

    RPAREN          reduce using rule 6 (direction1 -> LEFT .)


state 90

    (7) direction1 -> RIGHT .

    RPAREN          reduce using rule 7 (direction1 -> RIGHT .)


state 91

    (8) direction1 -> FORWARD .

    RPAREN          reduce using rule 8 (direction1 -> FORWARD .)


state 92

    (9) direction1 -> BACK .

    RPAREN          reduce using rule 9 (direction1 -> BACK .)


state 93

    (24) stmt -> GRAB LPAREN ID . RPAREN

    RPAREN          shift and go to state 129


state 94

    (40) param_list -> ID . COMMA param_list
    (41) param_list -> ID .

    COMMA           shift and go to state 130
    RPAREN          reduce using rule 41 (param_list -> ID .)


state 95

    (27) stmt -> ID LPAREN param_list . RPAREN
    (43) stmt -> ID LPAREN param_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 131


state 96

    (42) param_list -> empty .

    RPAREN          reduce using rule 42 (param_list -> empty .)


state 97

    (25) stmt -> SAFE_EXE LPAREN stmt . RPAREN

    RPAREN          shift and go to state 132


state 98

    (26) stmt -> MOVES LPAREN param_list . RPAREN

    RPAREN          shift and go to state 133


state 99

    (28) stmt -> REP NUMBER TIMES . block
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 134

state 100

    (30) stmt -> TURN_RIGHT LPAREN ID . RPAREN

    RPAREN          shift and go to state 135


state 101

    (31) stmt -> TURN_TO_THE LPAREN direction2 . RPAREN

    RPAREN          shift and go to state 136


state 102

    (10) direction2 -> NORTH .

    RPAREN          reduce using rule 10 (direction2 -> NORTH .)


state 103

    (11) direction2 -> SOUTH .

    RPAREN          reduce using rule 11 (direction2 -> SOUTH .)


state 104

    (12) direction2 -> EAST .

    RPAREN          reduce using rule 12 (direction2 -> EAST .)


state 105

    (13) direction2 -> WEST .

    RPAREN          reduce using rule 13 (direction2 -> WEST .)


state 106

    (32) stmt -> PICK LPAREN ID . RPAREN

    RPAREN          shift and go to state 137


state 107

    (33) stmt -> GOTO LPAREN ID . RPAREN

    RPAREN          shift and go to state 138


state 108

    (34) stmt -> DROP_CHIP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 139


state 109

    (35) stmt -> PLACE_BALLOON LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 140


state 110

    (36) stmt -> GRAB_BALLOON LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 141


state 111

    (37) stmt -> PICKUP_CHIP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 142


state 112

    (38) stmt -> POP_BALLOON LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 143


state 113

    (39) stmt -> WHILE condition DO . block OD
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 144

state 114

    (2) program -> NEW VAR ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 145


state 115

    (3) program -> NEW MACRO ID LPAREN param_list . RPAREN block SEMICOLON

    RPAREN          shift and go to state 146


state 116

    (16) stmt -> IF condition THEN block . ELSE block FI

    ELSE            shift and go to state 147


state 117

    (44) condition -> NOT LPAREN IS_BLOCKED . LPAREN ID RPAREN RPAREN

    LPAREN          shift and go to state 148


state 118

    (45) condition -> NOT LPAREN ZERO . QUESTION LPAREN ID RPAREN RPAREN

    QUESTION        shift and go to state 149


state 119

    (46) condition -> IS_BLOCKED LPAREN ID . RPAREN

    RPAREN          shift and go to state 150


state 120

    (47) condition -> ZERO QUESTION LPAREN . ID RPAREN

    ID              shift and go to state 151


state 121

    (48) condition -> IS_FACING LPAREN ID . RPAREN

    RPAREN          shift and go to state 152


state 122

    (17) stmt -> WALK LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 17 (stmt -> WALK LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 17 (stmt -> WALK LPAREN NUMBER RPAREN .)


state 123

    (18) stmt -> JUMP LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 18 (stmt -> JUMP LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 18 (stmt -> JUMP LPAREN NUMBER RPAREN .)


state 124

    (19) stmt -> DROP LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 19 (stmt -> DROP LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 19 (stmt -> DROP LPAREN NUMBER RPAREN .)


state 125

    (20) stmt -> MOVE LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 20 (stmt -> MOVE LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 20 (stmt -> MOVE LPAREN NUMBER RPAREN .)


state 126

    (21) stmt -> LET_GO LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 21 (stmt -> LET_GO LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 21 (stmt -> LET_GO LPAREN NUMBER RPAREN .)


state 127

    (22) stmt -> POP LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 22 (stmt -> POP LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 22 (stmt -> POP LPAREN NUMBER RPAREN .)


state 128

    (23) stmt -> TURN_TO_MY LPAREN direction1 RPAREN .

    SEMICOLON       reduce using rule 23 (stmt -> TURN_TO_MY LPAREN direction1 RPAREN .)
    RPAREN          reduce using rule 23 (stmt -> TURN_TO_MY LPAREN direction1 RPAREN .)


state 129

    (24) stmt -> GRAB LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 24 (stmt -> GRAB LPAREN ID RPAREN .)
    RPAREN          reduce using rule 24 (stmt -> GRAB LPAREN ID RPAREN .)


state 130

    (40) param_list -> ID COMMA . param_list
    (40) param_list -> . ID COMMA param_list
    (41) param_list -> . ID
    (42) param_list -> . empty
    (57) empty -> .

    ID              shift and go to state 94
    RPAREN          reduce using rule 57 (empty -> .)

    param_list                     shift and go to state 153
    empty                          shift and go to state 96

state 131

    (27) stmt -> ID LPAREN param_list RPAREN .
    (43) stmt -> ID LPAREN param_list RPAREN . SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
    RPAREN          reduce using rule 27 (stmt -> ID LPAREN param_list RPAREN .)
    SEMICOLON       shift and go to state 154

  ! SEMICOLON       [ reduce using rule 27 (stmt -> ID LPAREN param_list RPAREN .) ]


state 132

    (25) stmt -> SAFE_EXE LPAREN stmt RPAREN .

    SEMICOLON       reduce using rule 25 (stmt -> SAFE_EXE LPAREN stmt RPAREN .)
    RPAREN          reduce using rule 25 (stmt -> SAFE_EXE LPAREN stmt RPAREN .)


state 133

    (26) stmt -> MOVES LPAREN param_list RPAREN .

    SEMICOLON       reduce using rule 26 (stmt -> MOVES LPAREN param_list RPAREN .)
    RPAREN          reduce using rule 26 (stmt -> MOVES LPAREN param_list RPAREN .)


state 134

    (28) stmt -> REP NUMBER TIMES block .

    SEMICOLON       reduce using rule 28 (stmt -> REP NUMBER TIMES block .)
    RPAREN          reduce using rule 28 (stmt -> REP NUMBER TIMES block .)


state 135

    (30) stmt -> TURN_RIGHT LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 30 (stmt -> TURN_RIGHT LPAREN ID RPAREN .)
    RPAREN          reduce using rule 30 (stmt -> TURN_RIGHT LPAREN ID RPAREN .)


state 136

    (31) stmt -> TURN_TO_THE LPAREN direction2 RPAREN .

    SEMICOLON       reduce using rule 31 (stmt -> TURN_TO_THE LPAREN direction2 RPAREN .)
    RPAREN          reduce using rule 31 (stmt -> TURN_TO_THE LPAREN direction2 RPAREN .)


state 137

    (32) stmt -> PICK LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 32 (stmt -> PICK LPAREN ID RPAREN .)
    RPAREN          reduce using rule 32 (stmt -> PICK LPAREN ID RPAREN .)


state 138

    (33) stmt -> GOTO LPAREN ID RPAREN .

    SEMICOLON       reduce using rule 33 (stmt -> GOTO LPAREN ID RPAREN .)
    RPAREN          reduce using rule 33 (stmt -> GOTO LPAREN ID RPAREN .)


state 139

    (34) stmt -> DROP_CHIP LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 34 (stmt -> DROP_CHIP LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 34 (stmt -> DROP_CHIP LPAREN NUMBER RPAREN .)


state 140

    (35) stmt -> PLACE_BALLOON LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 35 (stmt -> PLACE_BALLOON LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 35 (stmt -> PLACE_BALLOON LPAREN NUMBER RPAREN .)


state 141

    (36) stmt -> GRAB_BALLOON LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 36 (stmt -> GRAB_BALLOON LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 36 (stmt -> GRAB_BALLOON LPAREN NUMBER RPAREN .)


state 142

    (37) stmt -> PICKUP_CHIP LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 37 (stmt -> PICKUP_CHIP LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 37 (stmt -> PICKUP_CHIP LPAREN NUMBER RPAREN .)


state 143

    (38) stmt -> POP_BALLOON LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 38 (stmt -> POP_BALLOON LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 38 (stmt -> POP_BALLOON LPAREN NUMBER RPAREN .)


state 144

    (39) stmt -> WHILE condition DO block . OD

    OD              shift and go to state 155


state 145

    (2) program -> NEW VAR ID ASSIGN NUMBER SEMICOLON .

    $end            reduce using rule 2 (program -> NEW VAR ID ASSIGN NUMBER SEMICOLON .)


state 146

    (3) program -> NEW MACRO ID LPAREN param_list RPAREN . block SEMICOLON
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 156

state 147

    (16) stmt -> IF condition THEN block ELSE . block FI
    (4) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 5

    block                          shift and go to state 157

state 148

    (44) condition -> NOT LPAREN IS_BLOCKED LPAREN . ID RPAREN RPAREN

    ID              shift and go to state 158


state 149

    (45) condition -> NOT LPAREN ZERO QUESTION . LPAREN ID RPAREN RPAREN

    LPAREN          shift and go to state 159


state 150

    (46) condition -> IS_BLOCKED LPAREN ID RPAREN .

    THEN            reduce using rule 46 (condition -> IS_BLOCKED LPAREN ID RPAREN .)
    DO              reduce using rule 46 (condition -> IS_BLOCKED LPAREN ID RPAREN .)


state 151

    (47) condition -> ZERO QUESTION LPAREN ID . RPAREN

    RPAREN          shift and go to state 160


state 152

    (48) condition -> IS_FACING LPAREN ID RPAREN .

    THEN            reduce using rule 48 (condition -> IS_FACING LPAREN ID RPAREN .)
    DO              reduce using rule 48 (condition -> IS_FACING LPAREN ID RPAREN .)


state 153

    (40) param_list -> ID COMMA param_list .

    RPAREN          reduce using rule 40 (param_list -> ID COMMA param_list .)


state 154

    (43) stmt -> ID LPAREN param_list RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 43 (stmt -> ID LPAREN param_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 43 (stmt -> ID LPAREN param_list RPAREN SEMICOLON .)


state 155

    (39) stmt -> WHILE condition DO block OD .

    SEMICOLON       reduce using rule 39 (stmt -> WHILE condition DO block OD .)
    RPAREN          reduce using rule 39 (stmt -> WHILE condition DO block OD .)


state 156

    (3) program -> NEW MACRO ID LPAREN param_list RPAREN block . SEMICOLON

    SEMICOLON       shift and go to state 161


state 157

    (16) stmt -> IF condition THEN block ELSE block . FI

    FI              shift and go to state 162


state 158

    (44) condition -> NOT LPAREN IS_BLOCKED LPAREN ID . RPAREN RPAREN

    RPAREN          shift and go to state 163


state 159

    (45) condition -> NOT LPAREN ZERO QUESTION LPAREN . ID RPAREN RPAREN

    ID              shift and go to state 164


state 160

    (47) condition -> ZERO QUESTION LPAREN ID RPAREN .

    THEN            reduce using rule 47 (condition -> ZERO QUESTION LPAREN ID RPAREN .)
    DO              reduce using rule 47 (condition -> ZERO QUESTION LPAREN ID RPAREN .)


state 161

    (3) program -> NEW MACRO ID LPAREN param_list RPAREN block SEMICOLON .

    $end            reduce using rule 3 (program -> NEW MACRO ID LPAREN param_list RPAREN block SEMICOLON .)


state 162

    (16) stmt -> IF condition THEN block ELSE block FI .

    SEMICOLON       reduce using rule 16 (stmt -> IF condition THEN block ELSE block FI .)
    RPAREN          reduce using rule 16 (stmt -> IF condition THEN block ELSE block FI .)


state 163

    (44) condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN . RPAREN

    RPAREN          shift and go to state 165


state 164

    (45) condition -> NOT LPAREN ZERO QUESTION LPAREN ID . RPAREN RPAREN

    RPAREN          shift and go to state 166


state 165

    (44) condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN .

    THEN            reduce using rule 44 (condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN .)
    DO              reduce using rule 44 (condition -> NOT LPAREN IS_BLOCKED LPAREN ID RPAREN RPAREN .)


state 166

    (45) condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN . RPAREN

    RPAREN          shift and go to state 167


state 167

    (45) condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN .

    THEN            reduce using rule 45 (condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN .)
    DO              reduce using rule 45 (condition -> NOT LPAREN ZERO QUESTION LPAREN ID RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 131 resolved as shift
